// ==========================================================================================
// Title:   #Tunamal - Converts until 9007199254740991 or 10^16 numbers to Mongolion wordsüòâ
// Author:  Batzorig Gonchigsumlaa
// email:   batz.gg@gmail.com
// Date:    03 Mar 2023
//===========================================================================================

function nm2mn (tunamal){
    const ones = ["", "–Ω—ç–≥", "—Ö–æ—ë—Ä", "–≥—É—Ä–∞–≤", "–¥”©—Ä”©–≤", "—Ç–∞–≤", "–∑—É—Ä–≥–∞–∞", "–¥–æ–ª–æ–æ", "–Ω–∞–π–º", "–µ—Å"];
    const onesAlt = ["", "–Ω—ç–≥", "—Ö–æ—ë—Ä", "–≥—É—Ä–≤–∞–Ω", "–¥”©—Ä–≤”©–Ω", "—Ç–∞–≤–∞–Ω", "–∑—É—Ä–≥–∞–∞–Ω", "–¥–æ–ª–æ–æ–Ω", "–Ω–∞–π–º–∞–Ω", "–µ—Å”©–Ω"];
    const onesAltH = ["", "–Ω—ç–≥—ç–Ω", "—Ö–æ—ë—Ä", "–≥—É—Ä–≤–∞–Ω", "–¥”©—Ä–≤”©–Ω", "—Ç–∞–≤–∞–Ω", "–∑—É—Ä–≥–∞–∞–Ω", "–¥–æ–ª–æ–æ–Ω", "–Ω–∞–π–º–∞–Ω", "–µ—Å”©–Ω"];
    const tens = ["", "–∞—Ä–∞–≤", "—Ö–æ—Ä—å", "–≥—É—á", "–¥”©—á", "—Ç–∞–≤—å", "–∂–∞—Ä", "–¥–∞–ª", "–Ω–∞—è", "–µ—Ä"];
    const tenth = ["", "–∞—Ä–≤–∞–Ω", "—Ö–æ—Ä–∏–Ω", "–≥—É—á–∏–Ω", "–¥”©—á–∏–Ω", "—Ç–∞–≤–∏–Ω", "–∂–∞—Ä–∞–Ω", "–¥–∞–ª–∞–Ω", "–Ω–∞—è–Ω", "–µ—Ä—ç–Ω"];

    process.stdout.write(tunamal + " : ");
    if(tunamal === 0) return '—Ç—ç–≥' ;
    if(tunamal > Number.MAX_SAFE_INTEGER) return '‚ö†Ô∏è  –ê–ù–•–ê–ê–†: –¢—É–Ω–∞–º–∞–ª—ã–Ω –æ—Ä–æ–Ω–≥–æ–æ—Å —Ö—ç—Ç—ç—Ä–ª—ç—ç';

    let num = ('0000000000000000'+ tunamal).slice(-16).match(/^(\d{1})(\d{1})(\d{2})(\d{1})(\d{2})(\d{1})(\d{2})(\d{1})(\d{2})(\d{1})(\d{2})$/); // —Ç—É–Ω–∞–º–∞–ª 

    if(!num) return;
    
    let result = num[1] != 0 ? (onesAlt[Number(num[1])] || `${tenth[num[1][0]]} ${onesAlt[num[1][1]]}`) + ' —Ç—É–Ω–∞–º–∞–ª ' : '';

    result += num[2] != 0 ? (onesAlt[Number(num[2])] || `${tenth[num[2][0]]} ${onesAlt[num[2][1]]}`) + ' –∑—É—É–Ω ' : '';
    result += num[3] != 0 ? (onesAlt[Number(num[3])] || `${tenth[num[3][0]]} ${onesAlt[num[3][1]]}`) + ' –∏—Ö –Ω–∞—è–¥ ' : '';

    result += num[4] != 0 ? (onesAlt[Number(num[4])] || `${tenth[num[4][0]]} ${onesAlt[num[4][1]]}`) + ' –∑—É—É–Ω ' : '';
    result += num[5] != 0 ? (onesAlt[Number(num[5])] || `${tenth[num[5][0]]} ${onesAlt[num[5][1]]}`) + ' —Ç—ç—Ä–±—É–º ' : '';
    
    result += num[6] != 0 ? (onesAlt[Number(num[6])] || `${tenth[num[6][0]]} ${onesAlt[num[6][1]]}`) + ' –∑—É—É–Ω ' : '';
    result += num[7] != 0 ? (onesAlt[Number(num[7])] || `${tenth[num[7][0]]} ${onesAlt[num[7][1]]}`) + ' —Å–∞—è ' : '';
    
    result += num[8] != 0 ? (onesAlt[Number(num[8])] || `${tenth[num[8][0]]} ${ones[num[8][1]]}`) + ' –∑—É—É–Ω ' : '';
    result += num[9] != 0 ? (onesAlt[Number(num[9])] || `${tenth[num[9][0]]} ${num[9][0]!=='0' ? onesAltH[num[9][1]] : onesAlt[num[9][1]]}`) + ' –º—è–Ω–≥–∞ ' : (num[8] !== '0' ? ' –º—è–Ω–≥–∞ ' : '');
    result += num[10] != 0 ? (onesAlt[Number(num[10])] || `${tenth[num[10][0]]} ${ones[num[10][1]]}`) + (num[11] === '00' ? ' –∑—É—É ' : ' –∑—É—É–Ω ') : '';
    result += num[11] != 0 ? (ones[Number(num[11])] || `${(num[11][1]==="0")?tens[num[11][0]]:tenth[num[11][0]]} ${ones[num[11][1]]} `) : '';

    return result.replace(/\s+/g, ' ').trim();
}